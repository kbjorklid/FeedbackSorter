// <auto-generated />
using System;
using FeedbackSorter.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FeedbackSorter.Infrastructure.Migrations
{
    [DbContext(typeof(FeedbackSorterDbContext))]
    [Migration("20250601170902_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FeatureCategoryDbUserFeedbackDb", b =>
                {
                    b.Property<Guid>("AnalysisResultFeatureCategoriesId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserFeedbackDbId")
                        .HasColumnType("TEXT");

                    b.HasKey("AnalysisResultFeatureCategoriesId", "UserFeedbackDbId");

                    b.HasIndex("UserFeedbackDbId");

                    b.ToTable("UserFeedbackAnalysisResultFeatureCategories", (string)null);
                });

            modelBuilder.Entity("FeedbackSorter.Infrastructure.Persistence.Models.FeatureCategoryDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FeatureCategories");
                });

            modelBuilder.Entity("FeedbackSorter.Infrastructure.Persistence.Models.UserFeedbackDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AnalysisResultAnalyzedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("AnalysisResultSentiment")
                        .HasColumnType("TEXT");

                    b.Property<string>("AnalysisResultTitle")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("AnalysisStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LastFailureDetailsAttemptNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastFailureDetailsMessage")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastFailureDetailsOccurredAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastFailureDetailsReason")
                        .HasColumnType("TEXT");

                    b.Property<int>("RetryCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserFeedbacks");
                });

            modelBuilder.Entity("FeedbackSorter.Infrastructure.Persistence.Models.UserFeedbackSelectedCategoryDb", b =>
                {
                    b.Property<Guid>("UserFeedbackDbId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FeedbackCategoryValue")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UserFeedbackDbId", "FeedbackCategoryValue");

                    b.ToTable("UserFeedbackSelectedCategories");
                });

            modelBuilder.Entity("FeatureCategoryDbUserFeedbackDb", b =>
                {
                    b.HasOne("FeedbackSorter.Infrastructure.Persistence.Models.FeatureCategoryDb", null)
                        .WithMany()
                        .HasForeignKey("AnalysisResultFeatureCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FeedbackSorter.Infrastructure.Persistence.Models.UserFeedbackDb", null)
                        .WithMany()
                        .HasForeignKey("UserFeedbackDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FeedbackSorter.Infrastructure.Persistence.Models.UserFeedbackSelectedCategoryDb", b =>
                {
                    b.HasOne("FeedbackSorter.Infrastructure.Persistence.Models.UserFeedbackDb", "UserFeedback")
                        .WithMany("SelectedFeedbackCategories")
                        .HasForeignKey("UserFeedbackDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserFeedback");
                });

            modelBuilder.Entity("FeedbackSorter.Infrastructure.Persistence.Models.UserFeedbackDb", b =>
                {
                    b.Navigation("SelectedFeedbackCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
